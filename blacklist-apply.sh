#!/bin/bash
# Apply blacklist of bad hosts generated by blacklist-gen.sh

# (C) Murty Rompalli
# Last Updated: 7/3/2021

# NOTE:
# 1. This script may not work in OpenVZ guests, because ipset module cannot be loaded
# 2. This script uses iptables and ipset module
# 3. Install ipset:   dnf install ipset (Fedora/CentOS)  --OR--  apt install ipset  (Debian)
# 4. Put this in rc.local so it is run automatically when system boots up
# 5. Run it through root's cron on machines running webserver or mail server.
#    It is an overkill and unnecessary on other machines.
#    Example cron entry: 0 2 * * * /root/blacklist-apply.sh https://your-website.com/ipset.txt

[ $(id -u) -ne 0 ] && echo $0: Must be run as root && exit 1
[ $# -gt 1 ] && echo Usage: $0 '[ipset-file]' && exit 2
cd $(dirname $0) || exit 3

# If TIMEOUT is uncommented, Size in memory increases by 50%
# Expunge entries from blacklist after 7 days; must be higher than cron job interval (1 day)
#TIMEOUT='timeout 604800'

IPSETNAME=blacklist
RESTORE=ipset-commands
[ $# -eq 1 ] && RESTORE="$1"
which iptables > /dev/null && IPTABLES=iptables || exit 4
which ipset > /dev/null && IPSET=ipset || exit 5

if [[ "$RESTORE" == https:* ]]
then
  TMP=/var/tmp/ipset-commands
  curl --compressed -sLo "$TMP" -z "$TMP" "$RESTORE"
  RESTORE="$TMP"
fi

[ -r "$RESTORE" ] || {
  echo $0: $RESTORE: read error
  exit 6
}

# We use double the number of bad hosts, to allow for future growth in number of bad hosts
let MAXELEM=2\*$(grep -c ^add "$RESTORE")

[ $MAXELEM -gt 0 ] || {
  echo $0: $RESTORE: file error
  exit 7
}

$IPSET list $IPSETNAME -n > /dev/null 2>&1 ||
  $IPSET create $IPSETNAME -exist hash:net family inet maxelem $MAXELEM $TIMEOUT

$IPSET list $IPSETNAME.tmp -n > /dev/null 2>&1 ||
  $IPSET create $IPSETNAME.tmp -exist hash:net family inet maxelem $MAXELEM $TIMEOUT

$IPSET -file "$RESTORE" restore

$IPTABLES -t raw -C PREROUTING -m set --match-set $IPSETNAME src -j CT --notrack 2> /dev/null ||
  $IPTABLES -t raw -I PREROUTING -m set --match-set $IPSETNAME src -j CT --notrack

$IPTABLES -t mangle -C PREROUTING -m set --match-set $IPSETNAME src -j DROP 2> /dev/null ||
  $IPTABLES -t mangle -I PREROUTING -m set --match-set $IPSETNAME src -j DROP
